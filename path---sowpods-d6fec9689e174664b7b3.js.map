{"version":3,"sources":["webpack:///path---sowpods-d6fec9689e174664b7b3.js","webpack:///./.cache/json/sowpods.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/sowpods.json","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","path"],"mappings":"AAAAA,cAAc,iBAERC,iEACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,qBAAAC,OAAA,iBAAsDC,gBAAmBC,GAAA,0GAAAC,KAAA,8iDAAipDC,aAA4CL,MAAA,UAAAM,KAAA,wBAAgDC,aAAgBC,KAAA","file":"path---sowpods-d6fec9689e174664b7b3.js","sourcesContent":["webpackJsonp([189997306536443],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/sowpods.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"The Daily Recurser\",\"author\":\"Amelia Riely\"}},\"markdownRemark\":{\"id\":\"/Users/amelia/development/blog/src/pages/2017-09-27-sowpods/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Yesterday Connor and I paired on a little program that takes in the SOWPODS list of words for Scrabble and determines various properties of the list. We decided to do it Kotlin using function methods. Here’s a little piece of what we wrote. It prints out a list of all the words that contain “UU”. Cool!</p>\\n<p>The <code>kotlin.io</code> library is mostly an extension of <code>java.io</code>, so accessing files is very familiar if you have experience in Java.\\nIn learning about the <code>it</code> keyword, I discovered that in 2014 it was <a href=\\\"https://discuss.kotlinlang.org/t/will-it-variable-stay-or-go/522\\\">considered</a> for removal from the language because of its potential for ambiguity in nested lambdas. In this very small example, I think <code>it</code> is actually super readable, so decided to leave it in, though I would avoid it in anything more complex.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>import java.io.File\\nimport java.io.InputStream\\n\\n\\nfun main(args: Array<String>) {\\n    val wordList = sourceWordListFromFile()\\n    val noUUList = wordList.filter { containsUU(it) }\\n    noUUList.forEach { println(it) }\\n}\\n\\nfun sourceWordListFromFile() : List<String> {\\n    val wordList = mutableListOf<String>()\\n    val inputStream: InputStream = File(\\\"./src/sowpods.txt\\\").inputStream()\\n    inputStream.bufferedReader().useLines { words -> words.forEach { wordList.add(it) } }\\n    return wordList\\n}\\n\\nfun containsUU(word: String): Boolean {\\n    return word.contains(Regex(\\\"UU\\\"))\\n}</code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"SOWPODS\",\"date\":\"September 27, 2017\"}}},\"pathContext\":{\"path\":\"/sowpods/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---sowpods-d6fec9689e174664b7b3.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"The Daily Recurser\",\"author\":\"Amelia Riely\"}},\"markdownRemark\":{\"id\":\"/Users/amelia/development/blog/src/pages/2017-09-27-sowpods/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Yesterday Connor and I paired on a little program that takes in the SOWPODS list of words for Scrabble and determines various properties of the list. We decided to do it Kotlin using function methods. Here’s a little piece of what we wrote. It prints out a list of all the words that contain “UU”. Cool!</p>\\n<p>The <code>kotlin.io</code> library is mostly an extension of <code>java.io</code>, so accessing files is very familiar if you have experience in Java.\\nIn learning about the <code>it</code> keyword, I discovered that in 2014 it was <a href=\\\"https://discuss.kotlinlang.org/t/will-it-variable-stay-or-go/522\\\">considered</a> for removal from the language because of its potential for ambiguity in nested lambdas. In this very small example, I think <code>it</code> is actually super readable, so decided to leave it in, though I would avoid it in anything more complex.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>import java.io.File\\nimport java.io.InputStream\\n\\n\\nfun main(args: Array<String>) {\\n    val wordList = sourceWordListFromFile()\\n    val noUUList = wordList.filter { containsUU(it) }\\n    noUUList.forEach { println(it) }\\n}\\n\\nfun sourceWordListFromFile() : List<String> {\\n    val wordList = mutableListOf<String>()\\n    val inputStream: InputStream = File(\\\"./src/sowpods.txt\\\").inputStream()\\n    inputStream.bufferedReader().useLines { words -> words.forEach { wordList.add(it) } }\\n    return wordList\\n}\\n\\nfun containsUU(word: String): Boolean {\\n    return word.contains(Regex(\\\"UU\\\"))\\n}</code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"SOWPODS\",\"date\":\"September 27, 2017\"}}},\"pathContext\":{\"path\":\"/sowpods/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/sowpods.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/sowpods.json\n// module chunks = 189997306536443"],"sourceRoot":""}